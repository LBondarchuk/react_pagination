{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","pageList","itemList","active","setActive","className","href","onClick","length","items","from","to","numbers","n","push","getNumbers","map","App","useState","selectedValue","setSelectedValue","pagesLength","sliceItems","slice","item","result","i","createPageList","replace","split","id","defaultValue","onChange","e","currentTarget","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"0LAOaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAS,oBAA0B,IAAXF,EAAe,WAAa,IADtD,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAA0B,IAAXH,EACfI,QAAS,kBAAiB,IAAXJ,GAAgBC,EAAUD,EAAS,IALpD,oBAUDF,EACD,oBACEI,UAAS,oBAAeF,IAAWF,EAASO,OAAS,WAAa,IADpE,SAGE,mBACE,UAAQ,WACRH,UAAU,YACVC,KAAK,QACL,gBAAeH,IAAWF,EAASO,OACnCD,QAAS,kBAAMJ,IAAWF,EAASO,QAAUJ,EAAUD,EAAS,IALlE,uBAWJ,6BACGD,Q,MCvCT,IAAMO,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBC,KAAI,SAAAH,GAAC,qBAAYA,MAEPI,EAAgB,WAC3B,MAA0CC,mBAAS,KAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,mBAAS,GAArC,mBAAOf,EAAP,KAAeC,EAAf,KAEMiB,EAAcZ,EAAMD,QAAUW,EAC9BG,EAAab,EAAMc,OACtBJ,EAAgBhB,GAAUgB,GAAgBA,EAAgBhB,GA2BvDD,EAAWoB,EAAWN,KAAI,SAAAQ,GAAI,OAClC,oBAAe,UAAQ,OAAvB,SACGA,GADMA,MAKLvB,EA9BiB,WAGrB,IAFA,IAAMwB,EAAS,GADY,WAGlBC,GACPD,EAAOX,KACL,oBAEET,UAAS,oBAAeqB,EAAI,IAAMvB,EAAS,SAAW,IAFxD,SAIE,mBACE,UAAQ,WACRI,QAAS,kBAAMH,EAAUsB,EAAI,IAC7BrB,UAAU,YACVC,KAAI,WAAMoB,EAAI,GAJhB,SAMGA,EAAI,KAVT,WACWA,EAAI,MAHVA,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAAI,EAAjCA,GAkBT,OAAOD,EASQE,GAEjB,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,yBACWF,EADX,gBAEOmB,EAAW,GAAGM,QAAQ,IAAK,MAAMA,QAAQ,IAAK,KAFrD,cAE+DN,EAAWA,EAAWd,OAAS,GAAGqB,MAAM,KAAK,GAF5G,eAEqHpB,EAAMD,OAF3H,QAKA,sBAAKH,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,aAAcZ,EACda,SAAU,SAACC,GACTb,EAAiBa,EAAEC,cAAcC,OACjC/B,EAAU,IAPd,SAjDY,CAAC,IAAK,IAAK,KAAM,MA2DdY,KAAI,SAAAmB,GAAK,OACpB,wBAEEJ,aAAcI,EAFhB,UAIIA,GAHGA,UASb,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEJ,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRC,UAAWA,QEvFnBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.451817fc.chunk.js","sourcesContent":["type Props = {\n  pageList: JSX.Element[]\n  itemList: JSX.Element[]\n  active: number\n  setActive: (number : number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pageList,\n  itemList,\n  active,\n  setActive,\n}) => {\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={`page-item ${active === 1 ? 'disabled' : ''}`}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={active === 1}\n            onClick={() => active !== 1 && setActive(active - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pageList}\n        <li\n          className={`page-item ${active === pageList.length ? 'disabled' : ''}`}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={active === pageList.length}\n            onClick={() => active !== pageList.length && setActive(active + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemList}\n      </ul>\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectedValue, setSelectedValue] = useState('5');\n  const [active, setActive] = useState(1);\n  const optionValue = ['3', '5', '10', '20'];\n  const pagesLength = items.length / +selectedValue;\n  const sliceItems = items.slice(\n    +selectedValue * active - +selectedValue, +selectedValue * active,\n  );\n\n  const createPageList = () => {\n    const result = [];\n\n    for (let i = 0; i < pagesLength; i += 1) {\n      result.push(\n        <li\n          key={`#${i + 1}`}\n          className={`page-item ${i + 1 === active ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            onClick={() => setActive(i + 1)}\n            className=\"page-link\"\n            href={`#${i + 1}`}\n          >\n            {i + 1}\n          </a>\n        </li>,\n      );\n    }\n\n    return result;\n  };\n\n  const itemList = sliceItems.map(item => (\n    <li key={item} data-cy=\"item\">\n      {item}\n    </li>\n  ));\n\n  const pageList = createPageList();\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${active} `}\n        {`(${sliceItems[0].replace('m', 'ms').replace('I', 'i')} - ${sliceItems[sliceItems.length - 1].split(' ')[1]} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={selectedValue}\n            onChange={(e) => {\n              setSelectedValue(e.currentTarget.value);\n              setActive(1);\n            }}\n          >\n            {optionValue.map(value => (\n              <option\n                key={value}\n                defaultValue={value}\n              >\n                {+value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        pageList={pageList}\n        itemList={itemList}\n        active={active}\n        setActive={setActive}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}